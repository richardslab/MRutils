name: docker-build-push

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - '**'
env:
    dockerhub_repository: mr_utils
    dockerhub_organization: richardslab
jobs:
  variables:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.date.outputs.value }}
      branch_tag: ${{ steps.branch.outputs.value }}
      tag: ${{ steps.tags.outputs.value }}
    steps:
      - 
        name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      -   
        name: Get current date
        id: date
        run: echo "::set-output name=value::$(date +'%Y-%m-%d')"
      - 
        name: Get Branch tag
        id: branch
        run: echo "::set-output name=value::${{env.dockerhub_organization}}/${{env.dockerhub_repository}}:${{steps.date.outputs.value}}_${{env.GITHUB_REF_SLUG}}"
      - 
        name: Get Latest tag
        id: latest
        run: echo "::set-output name=value::${{env.dockerhub_organization}}/${{env.dockerhub_repository}}:latest"
      - 
        uses: haya14busa/action-cond@v1
        id: tags
        with:
          cond: ${{ env.GITHUB_REF_SLUG == 'main' }}
          if_true: ${{env.branch_tag}}, ${{env.latest_tag}}
          if_false: ${{env.branch_tag}}
        env:
          branch_tag: ${{steps.branch.outputs.value}}
          latest_tag: ${{steps.latest.outputs.value}}
  build_docker:
    needs: variables
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Show space available
        run: df -h .
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - 
        name: Show space available
        run: df -h .
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Show space available
        run: df -h .
      - 
        name: Get hash key for cache
        id: hash
        uses: theowenyoung/folder-hash@v2.0.1
        with:
          path: installation
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ steps.hash.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Show space available
        run: df -h .
      -
        name: Show variables
        run: |
          echo date = ${{ needs.variables.outputs.date }}
          echo tags = ${{ needs.variables.outputs.tag }}
          echo branch = ${{ needs.variables.outputs.branch_tag }}
          echo hash = ${{ steps.hash.outputs.hash }}
      -
        name: Build and push branch
        uses: docker/build-push-action@v2
        with:
          context: installation
          push: true
          build-args: |
            GITHUB_PAT=${{ secrets.PAT_GITHUB }} 
          tags: ${{ needs.variables.outputs.tag }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,mode=max,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
  test_conda_info:
    needs: [variables,build_docker]
    runs-on: ubuntu-latest
    steps:
      - name: Show space available
        run: df -h .
      -
        name: test exporting conda env in docker
        uses: yfarjoun/docker-run-action@y_1
        with:
          image: ${{ needs.variables.outputs.branch_tag }}
          options: -v ${{ github.workspace }}:/work
          run: |
            conda info
            conda env export > /work/MRutils_linux.yaml  
            ls /work
      -
        name: Show files available
        run: ls -ltrR
      -
        name: create upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: conda-environment-linux
          path: MRutils_linux.yaml
          if-no-files-found: error
          retention-days: 60 
  small_docker_tests:
    needs: [variables,build_docker]
    runs-on: ubuntu-latest
    steps:
      -
        name: Show space available
        run: df -h .
      -
        name: run docker test png
        uses: yfarjoun/docker-run-action@y_1
        with:
          image: ${{ needs.variables.outputs.branch_tag }}
          run: Rscript -e 'png()'
      - 
        name: create input files
        run: echo "$file" > file.R
        env:
          file: |
            library(ggplot2)
            png("/work/diamonds.png")
            ggplot(diamonds) + geom_point(aes(x=carat,y=price,color=clarity))
            dev.off()
      -
        name: Show file available
        run: cat file.R
      -
        name: run docker test png
        uses: yfarjoun/docker-run-action@y_1
        with:
          image: ${{ needs.variables.outputs.branch_tag }}
          options: -v ${{ github.workspace }}:/work
          run: Rscript /work/file.R
      - 
        uses: actions/upload-artifact@v2
        with:
          name: diamonds_png
          path: diamonds.png
          if-no-files-found: error
          retention-days: 30
      -
        name: run docker test two-sample-mr
        uses: yfarjoun/docker-run-action@main
        with:
          image: ${{ needs.variables.outputs.branch_tag }}
          run: Rscript -e 'library(TwoSampleMR)'

      - 
        name: Run R tests in docker image
        uses: yfarjoun/docker-run-action@main
        with:
          image: ${{ needs.variables.outputs.branch_tag }}
          run: Rscript -e 'devtools::test()'

  # Run_Vitamin_D_2SMR:
  #   needs: [variables,build_docker]
  #   runs-on: ubuntu-latest
  #   env: 
  #     RESULTS_BASE_URL: https://storage.googleapis.com/covid19-hg-public/20200915/results/20201020
  #     RESULTS_FILE: COVID19_HGI_A2_ALL_leave_23andme_20201020.b37.txt.gz
  #   steps:
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v2
  #     - 
  #       name: get Raw Data
  #       run: |
  #         curl -SL "${{ env.RESULTS_BASE_URL }}/${{ env.RESULTS_FILE }}"     > "${{ github.workspace }}/raw_data/${{ env.RESULTS_FILE }}"
  #         curl -SL "${{ env.RESULTS_BASE_URL }}/${{ env.RESULTS_FILE }}.tbi" > "${{ github.workspace }}/raw_data/${{ env.RESULTS_FILE }}.tbi"
  #     - 
  #       name: put LD Link token into a file
  #       run: echo ${{ secrets.LD_LINK_TOKEN }} > ${{ github.workspace }}/LD_LINK_TOKEN
  #     -
  #       name: Show files available
  #       run: ls -ltrR ${{ github.workspace }}
  #     -
  #       name: Run Vitamin D two-sample-mr
  #       uses: yfarjoun/docker-run-action@main
  #       with:
  #         image: ${{ needs.variables.outputs.branch_tag }}
  #         options: -v ${{ github.workspace }}:/work 
  #         run: Rscript /work/scripts/knit.R -i /work/scripts/VD_COVID_MR_ALL.Rmd -o /work/scripts/VD_COVID_MR_ALL.pdf
  #     -
  #       name: Show files available
  #       if: ${{ always() }}
  #       run: ls -ltrR
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: report_pdf
  #         path: ${{ github.workspace }}/scripts/VD_COVID_MR_ALL.pdf
  #         if-no-files-found: error
  #         retention-days: 60
  #     - uses: actions/upload-artifact@v2
  #       if: ${{ always() }}
  #       with:
  #         name: derived_data
  #         path: ${{ github.workspace }}/derived_data
  #         if-no-files-found: error
  #         retention-days: 60


